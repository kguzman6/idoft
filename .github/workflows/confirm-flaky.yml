name: Confirm Flaky Test (fast)

on:
  workflow_dispatch:
    inputs:
      repo_url:   { description: 'Git repo URL', required: true, type: string }
      sha:        { description: 'Commit SHA (optional)', required: false, type: string, default: '' }
      module:     { description: 'Maven module path (use "." for root)', required: true, type: string }
      fqtn:       { description: 'pkg.Class.method (e.g., a.b.C.testX)', required: true, type: string }
      nondexRuns: { description: 'NonDex runs', required: true, type: string, default: '120' }
      java:       { description: 'Java version (8/11/17)', required: true, type: string, default: '11' }

jobs:
  confirm:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout (this repo; artifacts only)
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ inputs.java }}

      - name: Cache Maven ~/.m2
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: m2-${{ runner.os }}-${{ inputs.java }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            m2-${{ runner.os }}-${{ inputs.java }}-

      - name: Shallow clone target repo (fast)
        run: |
          set -e
          git clone --depth 1 "${{ inputs.repo_url }}" proj
          cd proj
          if [ -n "${{ inputs.sha }}" ]; then
            # fetch just that commit if it isn't in the shallow clone
            if ! git cat-file -e "${{ inputs.sha }}^{commit}" 2>/dev/null; then
              git fetch --depth 1 origin "${{ inputs.sha }}"
            fi
            git checkout "${{ inputs.sha }}" || echo "⚠️ SHA not found; staying on default branch"
          fi
          echo "Using commit:"; git rev-parse HEAD

      - name: Build (skip tests, fast flags, parallel)
        working-directory: proj
        run: |
          set -o pipefail
          MOD="${{ inputs.module }}"
          mvn -q -T 2C -DskipTests \
              -Dgpg.skip=true -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true \
              -Denforcer.skip=true -DskipITs=true \
              -pl "$MOD" -am clean install || \
          mvn -q -T 2C -DskipTests \
              -Dgpg.skip=true -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true \
              -Denforcer.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true \
              -pl "$MOD" -am clean install

      - name: Run test (normal; fail-fast)
        id: unit
        working-directory: proj
        run: |
          set -o pipefail
          FQ="${{ inputs.fqtn }}"; CLASS="${FQ%.*}"; METHOD="${FQ##*.}"
          echo "Running ${CLASS}#${METHOD} (normal)"
          mvn -q -pl "${{ inputs.module }}" \
              -DfailIfNoTests=false \
              test -Dtest="${CLASS}#${METHOD}" 2>&1 | tee ../ci-build.log

      - name: Run with NonDex (shorter by default)
        id: nondex
        if: ${{ steps.unit.outcome == 'success' }}
        working-directory: proj
        continue-on-error: true
        run: |
          set -o pipefail
          FQ="${{ inputs.fqtn }}"; CLASS="${FQ%.*}"; METHOD="${FQ##*.}"
          echo "Running ${CLASS}#${METHOD} with NonDex (${{ inputs.nondexRuns }} runs)"
          mvn -q -pl "${{ inputs.module }}" \
              edu.illinois:nondex-maven-plugin:2.1.1:nondex \
              -Dtest="${CLASS}#${METHOD}" \
              -DnondexRuns="${{ inputs.nondexRuns }}" \
              2>&1 | tee -a ../ci-build.log

      - name: Upload ci-build.log
        uses: actions/upload-artifact@v4
        with:
          name: ci-build.log
          path: ci-build.log

      - name: Decide (pass only if flakiness confirmed)
        if: ${{ always() }}
        run: |
          echo "unit:   ${{ steps.unit.outcome }}"
          echo "nondex: ${{ steps.nondex.outcome }}"
          if [ "${{ steps.unit.outcome }}" = "success" ] && [ "${{ steps.nondex.outcome }}" = "failure" ]; then
            echo "✅ Confirmed flaky."
            exit 0
          else
            echo "❌ Not confirmed (or normal run failed)."
            exit 1
          fi
